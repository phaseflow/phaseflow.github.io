{"version":3,"sources":["logo.svg","data/Modes.js","data/Maps.js","data/Passwords.js","components/Form.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MODES","mode","name","maps","mapOverrides","map","MAPS","PASSWORDS_ENUM","ALL","value","FREE","REQUIRED","PASSWORDS","API","API_SERVERS","concat","API_PROXIES","API_CONFIG","MODS_ALL","PLAYERS_MAX","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchProxies","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","fetch","then","response","json","data","setState","proxies","console","log","state","stop","fetchServers","_callee2","i","_context2","servers","pageCount","serverCount","handleSubmit","_ref3","_callee3","e","_context3","preventDefault","applyFilters","_x","apply","arguments","mods","users","maxPlayers","passwordStatus","passwords","modes","onPasswordChange","bind","assertThisInitialized","onModsChange","onUsersChange","onMaxPlayersChange","target","capacity","_this2","serverModsFilter","filter","s","length","serverMaxPlayersFilter","serverPlayersFilter","requiresPassword","serverPasswordFilter","_this3","react_default","createElement","onSubmit","className","htmlFor","type","id","min","max","onChange","size","required","key","mapImage","replaceAll","mapName","find","m","modeName","src","alt","title","style","fontSize","color","Fragment","host","maxWidth","proxy","flag","startedAtPretty","React","Component","App","components_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2eaaf036.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const MODES = [{\r\n    mode: \"HeroesVersusVillains\",\r\n    name: \"Heroes Versus Villains\",\r\n    maps: [\"S5_1/Levels/MP/Geonosis_01/Geonosis_01\", \"Levels/MP/Naboo_02/Naboo_02\", \"Levels/MP/Kashyyyk_01/Kashyyyk_01\", \"S8/Felucia/Levels/MP/Felucia_01/Felucia_01\", \"S7_2/Levels/Naboo_03/Naboo_03\", \"S6_2/Geonosis_02/Levels/Geonosis_02/Geonosis_02\", \"S3/Levels/Kessel_01/Kessel_01\", \"S9_3/Scarif/Levels/MP/Scarif_02/Scarif_02\", \"Levels/MP/Tatooine_01/Tatooine_01\", \"Levels/MP/Yavin_01/Yavin_01\", \"Levels/MP/Hoth_01/Hoth_01\", \"S2/Levels/CloudCity_01/CloudCity_01\", \"S2_2/Levels/JabbasPalace_01/JabbasPalace_01\", \"Levels/MP/Endor_01/Endor_01\", \"Levels/MP/DeathStar02_01/DeathStar02_01\", \"Levels/MP/Jakku_01/Jakku_01\", \"Levels/MP/Takodana_01/Takodana_01\", \"Levels/MP/StarKiller_01/StarKiller_01\", \"S9_3/Crait/Crait_02\", \"S9/Paintball/Levels/MP/Paintball_01/Paintball_01\", \"S9/Takodana_02/Takodana_02\", \"S9/Jakku_02/Jakku_02\"],\r\n    mapOverrides: [{\r\n        map: \"Levels/MP/Tatooine_01/Tatooine_01\",\r\n        name: \"Tatooine - Mos Eisley\"\r\n    }, {\r\n        map: \"S2_2/Levels/JabbasPalace_01/JabbasPalace_01\",\r\n        name: \"Tatooine - Jabba's Palace\"\r\n    }, {\r\n        map: \"S7_2/Levels/Naboo_03/Naboo_03\",\r\n        name: \"Republic Venator\"\r\n    }, {\r\n        map: \"S6_2/Geonosis_02/Levels/Geonosis_02/Geonosis_02\",\r\n        name: \"Separatist Dreadnought\"\r\n    }, {\r\n        map: \"S9/Jakku_02/Jakku_02\",\r\n        name: \"Resurgent Star Destroyer\"\r\n    }, {\r\n        map: \"S9/Takodana_02/Takodana_02\",\r\n        name: \"MC85 Star Cruiser\"\r\n    }]\r\n}, {\r\n    mode: \"PlanetaryBattles\",\r\n    name: \"Galactic Assault\",\r\n    maps: [\"S5_1/Levels/MP/Geonosis_01/Geonosis_01\", \"Levels/MP/Kamino_01/Kamino_01\", \"Levels/MP/Naboo_01/Naboo_01\", \"Levels/MP/Kashyyyk_01/Kashyyyk_01\", \"Levels/MP/Tatooine_01/Tatooine_01\", \"Levels/MP/Yavin_01/Yavin_01\", \"Levels/MP/Hoth_01/Hoth_01\", \"Levels/MP/Endor_01/Endor_01\", \"Levels/MP/DeathStar02_01/DeathStar02_01\", \"Levels/MP/Jakku_01/Jakku_01\", \"Levels/MP/Takodana_01/Takodana_01\", \"Levels/MP/StarKiller_01/StarKiller_01\", \"S1/Levels/Crait_01/Crait_01\"]\r\n}, {\r\n    mode: \"Mode1\",\r\n    name: \"Supremacy\",\r\n    maps: [\"S6_2/Geonosis_02/Levels/Geonosis_02/Geonosis_02\", \"S7_1/Levels/Kamino_03/Kamino_03\", \"S7_2/Levels/Naboo_03/Naboo_03\", \"S7/Levels/Kashyyyk_02/Kashyyyk_02\", \"S8/Felucia/Levels/MP/Felucia_01/Felucia_01\", \"S9_3/Scarif/Levels/MP/Scarif_02/Scarif_02\", \"S9_3/Tatooine_02/Tatooine_02\", \"Levels/MP/Yavin_01/Yavin_01\", \"S9_3/Hoth_02/Hoth_02\", \"Levels/MP/DeathStar02_01/DeathStar02_01\", \"S9/Jakku_02/Jakku_02\", \"S9/Takodana_02/Takodana_02\", \"S9/Paintball/Levels/MP/Paintball_01/Paintball_01\"]\r\n}, {\r\n    mode: \"Mode9\",\r\n    name: \"CO-OP Attack\",\r\n    maps: [\"S5_1/Levels/MP/Geonosis_01/Geonosis_01\", \"Levels/MP/Kamino_01/Kamino_01\", \"S7_2/Levels/Naboo_03/Naboo_03\", \"S7/Levels/Kashyyyk_02/Kashyyyk_02\", \"S8/Felucia/Levels/MP/Felucia_01/Felucia_01\", \"S7_1/Levels/Kamino_03/Kamino_03\", \"S6_2/Geonosis_02/Levels/Geonosis_02/Geonosis_02\", \"S3/Levels/Kessel_01/Kessel_01\", \"S9_3/Scarif/Levels/MP/Scarif_02/Scarif_02\", \"Levels/MP/Tatooine_01/Tatooine_01\", \"Levels/MP/Yavin_01/Yavin_01\", \"Levels/MP/Hoth_01/Hoth_01\", \"S2_2/Levels/JabbasPalace_01/JabbasPalace_01\", \"Levels/MP/Endor_01/Endor_01\", \"Levels/MP/DeathStar02_01/DeathStar02_01\", \"S9/Jakku_02/Jakku_02\", \"S9/Takodana_02/Takodana_02\", \"S9/StarKiller_02/StarKiller_02\", \"S9/Paintball/Levels/MP/Paintball_01/Paintball_01\", \"S9_3/COOP_NT_MC85/COOP_NT_MC85\", \"S9_3/COOP_NT_FOSD/COOP_NT_FOSD\"],\r\n    mapOverrides: [{\r\n        map: \"S6_2/Geonosis_02/Levels/Geonosis_02/Geonosis_02\",\r\n        name: \"Separatist Dreadnought\"\r\n    }, {\r\n        map: \"S7_1/Levels/Kamino_03/Kamino_03\",\r\n        name: \"Republic Venator\"\r\n    }, {\r\n        map: \"Levels/MP/Tatooine_01/Tatooine_01\",\r\n        name: \"Tatooine - Mos Eisley\"\r\n    }, {\r\n        map: \"S2_2/Levels/JabbasPalace_01/JabbasPalace_01\",\r\n        name: \"Tatooine - Jabba's Palace\"\r\n    }]\r\n}, {\r\n    mode: \"ModeDefend\",\r\n    name: \"CO-OP Defend\",\r\n    maps: [\"S5_1/Levels/MP/Geonosis_01/Geonosis_01\", \"Levels/MP/Kamino_01/Kamino_01\", \"S7_2/Levels/Naboo_03/Naboo_03\", \"S7/Levels/Kashyyyk_02/Kashyyyk_02\", \"S8/Felucia/Levels/MP/Felucia_01/Felucia_01\", \"S7_1/Levels/Kamino_03/Kamino_03\", \"S6_2/Geonosis_02/Levels/Geonosis_02/Geonosis_02\", \"S3/Levels/Kessel_01/Kessel_01\", \"S9_3/Scarif/Levels/MP/Scarif_02/Scarif_02\", \"Levels/MP/Tatooine_01/Tatooine_01\", \"Levels/MP/Yavin_01/Yavin_01\", \"Levels/MP/Hoth_01/Hoth_01\", \"S2_2/Levels/JabbasPalace_01/JabbasPalace_01\", \"Levels/MP/Endor_01/Endor_01\", \"Levels/MP/DeathStar02_01/DeathStar02_01\", \"S9/Jakku_02/Jakku_02\", \"S9/Takodana_02/Takodana_02\", \"S9/StarKiller_02/StarKiller_02\", \"S9/Paintball/Levels/MP/Paintball_01/Paintball_01\", \"S9_3/COOP_NT_MC85/COOP_NT_MC85\", \"S9_3/COOP_NT_FOSD/COOP_NT_FOSD\"],\r\n    mapOverrides: [{\r\n        map: \"S6_2/Geonosis_02/Levels/Geonosis_02/Geonosis_02\",\r\n        name: \"Separatist Dreadnought\"\r\n    }, {\r\n        map: \"S7_1/Levels/Kamino_03/Kamino_03\",\r\n        name: \"Republic Venator\"\r\n    }, {\r\n        map: \"Levels/MP/Tatooine_01/Tatooine_01\",\r\n        name: \"Tatooine - Mos Eisley\"\r\n    }, {\r\n        map: \"S2_2/Levels/JabbasPalace_01/JabbasPalace_01\",\r\n        name: \"Tatooine - Jabba's Palace\"\r\n    }]\r\n}, {\r\n    mode: \"PlanetaryMissions\",\r\n    name: \"Strike\",\r\n    maps: [\"Levels/MP/Kamino_01/Kamino_01\", \"Levels/MP/Naboo_01/Naboo_01\", \"Levels/MP/Kashyyyk_01/Kashyyyk_01\", \"Levels/MP/Tatooine_01/Tatooine_01\", \"Levels/MP/Yavin_01/Yavin_01\", \"Levels/MP/Hoth_01/Hoth_01\", \"Levels/MP/Endor_01/Endor_01\", \"Levels/MP/DeathStar02_01/DeathStar02_01\", \"Levels/MP/Jakku_01/Jakku_01\", \"Levels/MP/Takodana_01/Takodana_01\", \"Levels/MP/StarKiller_01/StarKiller_01\", \"S1/Levels/Crait_01/Crait_01\"],\r\n    mapOverrides: [{\r\n        map: \"S1/Levels/Crait_01/Crait_01\",\r\n        name: \"Crait (WIP)\"\r\n    }]\r\n}, {\r\n    mode: \"Mode5\",\r\n    name: \"Extraction\",\r\n    maps: [\"S3/Levels/Kessel_01/Kessel_01\", \"S2_2/Levels/JabbasPalace_01/JabbasPalace_01\"]\r\n}, {\r\n    mode: \"Blast\",\r\n    name: \"Blast\",\r\n    maps: [\"S5_1/Levels/MP/Geonosis_01/Geonosis_01\", \"Levels/MP/Kamino_01/Kamino_01\", \"Levels/MP/Naboo_01/Naboo_01\", \"Levels/MP/Naboo_02/Naboo_02\", \"Levels/MP/Kashyyyk_01/Kashyyyk_01\", \"S3/Levels/Kessel_01/Kessel_01\", \"Levels/MP/Tatooine_01/Tatooine_01\", \"Levels/MP/Yavin_01/Yavin_01\", \"Levels/MP/Hoth_01/Hoth_01\", \"S2/Levels/CloudCity_01/CloudCity_01\", \"S2_2/Levels/JabbasPalace_01/JabbasPalace_01\", \"Levels/MP/Endor_01/Endor_01\", \"S2_1/Levels/Endor_02/Endor_02\", \"Levels/MP/DeathStar02_01/DeathStar02_01\", \"Levels/MP/Jakku_01/Jakku_01\", \"Levels/MP/Takodana_01/Takodana_01\", \"Levels/MP/StarKiller_01/StarKiller_01\", \"S1/Levels/Crait_01/Crait_01\"],\r\n    mapOverrides: [{\r\n        map: \"Levels/MP/Tatooine_01/Tatooine_01\",\r\n        name: \"Tatooine - Mos Eisley\"\r\n    }, {\r\n        map: \"Levels/MP/Naboo_02/Naboo_02\",\r\n        name: \"Naboo - Palace Hangar\"\r\n    }, {\r\n        map: \"S2_2/Levels/JabbasPalace_01/JabbasPalace_01\",\r\n        name: \"Tatooine - Jabba's Palace\"\r\n    }, {\r\n        map: \"Levels/MP/Endor_01/Endor_01\",\r\n        name: \"Endor - Research Station 9\"\r\n    }, {\r\n        map: \"S2_1/Levels/Endor_02/Endor_02\",\r\n        name: \"Endor - Ewok Village (WIP)\"\r\n    }, {\r\n        map: \"Levels/MP/Naboo_01/Naboo_01\",\r\n        name: \"Naboo - Theed Palace\"\r\n    }]\r\n}, {\r\n    mode: \"Mode3\",\r\n    name: \"Ewok Hunt\",\r\n    maps: [\"S2_1/Levels/Endor_02/Endor_02\", \"S8_1/Endor_04/Endor_04\"]\r\n}, {\r\n    mode: \"ModeC\",\r\n    name: \"Jetpack Cargo\",\r\n    maps: [\"Levels/MP/Tatooine_01/Tatooine_01\", \"Levels/MP/Yavin_01/Yavin_01\", \"S2/Levels/CloudCity_01/CloudCity_01\"]\r\n}, {\r\n    mode: \"SpaceBattle\",\r\n    name: \"Starfighter Assault\",\r\n    maps: [\"Levels/Space/SB_DroidBattleShip_01/SB_DroidBattleShip_01\", \"Levels/Space/SB_Kamino_01/SB_Kamino_01\", \"Levels/Space/SB_Fondor_01/SB_Fondor_01\", \"Levels/Space/SB_Endor_01/SB_Endor_01\", \"Levels/Space/SB_Resurgent_01/SB_Resurgent_01\", \"S1/Levels/Space/SB_SpaceBear_01/SB_SpaceBear_01\"]\r\n}, {\r\n    mode: \"Mode7\",\r\n    name: \"Hero Starfighters\",\r\n    maps: [\"Levels/Space/SB_DroidBattleShip_01/SB_DroidBattleShip_01\", \"Levels/Space/SB_Kamino_01/SB_Kamino_01\", \"Levels/Space/SB_Fondor_01/SB_Fondor_01\", \"Levels/Space/SB_Endor_01/SB_Endor_01\", \"Levels/Space/SB_Resurgent_01/SB_Resurgent_01\", \"S1/Levels/Space/SB_SpaceBear_01/SB_SpaceBear_01\"]\r\n}, {\r\n    mode: \"Mode6\",\r\n    name: \"Hero Showdown\",\r\n    maps: [\"S5_1/Levels/MP/Geonosis_01/Geonosis_01\", \"Levels/MP/Kamino_01/Kamino_01\", \"Levels/MP/Naboo_02/Naboo_02\", \"Levels/MP/Kashyyyk_01/Kashyyyk_01\", \"S8/Felucia/Levels/MP/Felucia_01/Felucia_01\", \"S7_2/Levels/Naboo_03/Naboo_03\", \"S6_2/Geonosis_02/Levels/Geonosis_02/Geonosis_02\", \"S3/Levels/Kessel_01/Kessel_01\", \"S9_3/Scarif/Levels/MP/Scarif_02/Scarif_02\", \"Levels/MP/Tatooine_01/Tatooine_01\", \"Levels/MP/Yavin_01/Yavin_01\", \"Levels/MP/Hoth_01/Hoth_01\", \"S2/Levels/CloudCity_01/CloudCity_01\", \"S2_2/Levels/JabbasPalace_01/JabbasPalace_01\", \"Levels/MP/Endor_01/Endor_01\", \"Levels/MP/DeathStar02_01/DeathStar02_01\", \"Levels/MP/Jakku_01/Jakku_01\", \"Levels/MP/Takodana_01/Takodana_01\", \"Levels/MP/StarKiller_01/StarKiller_01\", \"S9_3/Crait/Crait_02\", \"S9/Paintball/Levels/MP/Paintball_01/Paintball_01\", \"S9/Takodana_02/Takodana_02\", \"S9/Jakku_02/Jakku_02\"],\r\n    mapOverrides: [{\r\n        map: \"Levels/MP/Tatooine_01/Tatooine_01\",\r\n        name: \"Tatooine - Mos Eisley\"\r\n    }, {\r\n        map: \"S2_2/Levels/JabbasPalace_01/JabbasPalace_01\",\r\n        name: \"Tatooine - Jabba's Palace\"\r\n    }, {\r\n        map: \"S7_2/Levels/Naboo_03/Naboo_03\",\r\n        name: \"Republic Venator\"\r\n    }, {\r\n        map: \"S6_2/Geonosis_02/Levels/Geonosis_02/Geonosis_02\",\r\n        name: \"Separatist Dreadnought\"\r\n    }, {\r\n        map: \"S9/Jakku_02/Jakku_02\",\r\n        name: \"Resurgent Star Destroyer\"\r\n    }, {\r\n        map: \"S9/Takodana_02/Takodana_02\",\r\n        name: \"MC85 Star Cruiser\"\r\n    }]\r\n}];","export const MAPS = [\r\n    {\r\n        map: \"S5_1/Levels/MP/Geonosis_01/Geonosis_01\",\r\n        name: \"Geonosis\"\r\n    },\r\n    {\r\n        map: \"S6_2/Geonosis_02/Levels/Geonosis_02/Geonosis_02\",\r\n        name: \"Geonosis\"\r\n    },\r\n    {\r\n        map: \"Levels/MP/Kamino_01/Kamino_01\",\r\n        name: \"Kamino\"\r\n    },\r\n    {\r\n        map: \"S7_1/Levels/Kamino_03/Kamino_03\",\r\n        name: \"Kamino\"\r\n    },\r\n    {\r\n        map: \"Levels/MP/Naboo_01/Naboo_01\",\r\n        name: \"Naboo\"\r\n    },\r\n    {\r\n        map: \"Levels/MP/Naboo_02/Naboo_02\",\r\n        name: \"Naboo\"\r\n    },\r\n    {\r\n        map: \"S7_2/Levels/Naboo_03/Naboo_03\",\r\n        name: \"Naboo\"\r\n    },\r\n    {\r\n        map: \"Levels/MP/Kashyyyk_01/Kashyyyk_01\",\r\n        name: \"Kashyyyk\"\r\n    },\r\n    {\r\n        map: \"S7/Levels/Kashyyyk_02/Kashyyyk_02\",\r\n        name: \"Kashyyyk\"\r\n    },\r\n    {\r\n        map: \"S8/Felucia/Levels/MP/Felucia_01/Felucia_01\",\r\n        name: \"Felucia\"\r\n    },\r\n    {\r\n        map: \"S3/Levels/Kessel_01/Kessel_01\",\r\n        name: \"Kessel\"\r\n    },\r\n    {\r\n        map: \"S9_3/Scarif/Levels/MP/Scarif_02/Scarif_02\",\r\n        name: \"Scarif\"\r\n    },\r\n    {\r\n        map: \"Levels/MP/Tatooine_01/Tatooine_01\",\r\n        name: \"Tatooine\"\r\n    },\r\n    {\r\n        map: \"S9_3/Tatooine_02/Tatooine_02\",\r\n        name: \"Tatooine\"\r\n    },\r\n    {\r\n        map: \"Levels/MP/Yavin_01/Yavin_01\",\r\n        name: \"Yavin\"\r\n    },\r\n    {\r\n        map: \"Levels/MP/Hoth_01/Hoth_01\",\r\n        name: \"Hoth\"\r\n    },\r\n    {\r\n        map: \"S9_3/Hoth_02/Hoth_02\",\r\n        name: \"Hoth\"\r\n    },\r\n    {\r\n        map: \"S2/Levels/CloudCity_01/CloudCity_01\",\r\n        name: \"Bespin\"\r\n    },\r\n    {\r\n        map: \"S2_2/Levels/JabbasPalace_01/JabbasPalace_01\",\r\n        name: \"Tatooine\"\r\n    },\r\n    {\r\n        map: \"Levels/MP/Endor_01/Endor_01\",\r\n        name: \"Endor\"\r\n    },\r\n    {\r\n        map: \"S2_1/Levels/Endor_02/Endor_02\",\r\n        name: \"Endor - Ewok Village\"\r\n    },\r\n    {\r\n        map: \"S8_1/Endor_04/Endor_04\",\r\n        name: \"Endor - Research Station 9\"\r\n    },\r\n    {\r\n        map: \"Levels/MP/DeathStar02_01/DeathStar02_01\",\r\n        name: \"Death Star II\"\r\n    },\r\n    {\r\n        map: \"Levels/MP/Jakku_01/Jakku_01\",\r\n        name: \"Jakku\"\r\n    },\r\n    {\r\n        map: \"S9/Jakku_02/Jakku_02\",\r\n        name: \"Jakku\"\r\n    },\r\n    {\r\n        map: \"Levels/MP/Takodana_01/Takodana_01\",\r\n        name: \"Takodana\"\r\n    },\r\n    {\r\n        map: \"S9/Takodana_02/Takodana_02\",\r\n        name: \"Takodana\"\r\n    },\r\n    {\r\n        map: \"Levels/MP/StarKiller_01/StarKiller_01\",\r\n        name: \"Starkiller Base\"\r\n    },\r\n    {\r\n        map: \"S9/StarKiller_02/StarKiller_02\",\r\n        name: \"Starkiller Base\"\r\n    },\r\n    {\r\n        map: \"S1/Levels/Crait_01/Crait_01\",\r\n        name: \"Crait\"\r\n    },\r\n    {\r\n        map: \"S9_3/Crait/Crait_02\",\r\n        name: \"Crait\"\r\n    },\r\n    {\r\n        map: \"S9/Paintball/Levels/MP/Paintball_01/Paintball_01\",\r\n        name: \"Ajan Kloss\"\r\n    },\r\n    {\r\n        map: \"S9_3/COOP_NT_MC85/COOP_NT_MC85\",\r\n        name: \"MC85 Star Cruiser\"\r\n    },\r\n    {\r\n        map: \"S9_3/COOP_NT_FOSD/COOP_NT_FOSD\",\r\n        name: \"First Order Star Destroyer\"\r\n    },\r\n    {\r\n        map: \"Levels/Space/SB_DroidBattleShip_01/SB_DroidBattleShip_01\",\r\n        name: \"Ryloth\"\r\n    },\r\n    {\r\n        map: \"Levels/Space/SB_Kamino_01/SB_Kamino_01\",\r\n        name: \"Kamino\"\r\n    },\r\n    {\r\n        map: \"Levels/Space/SB_Fondor_01/SB_Fondor_01\",\r\n        name: \"Fondor\"\r\n    },\r\n    {\r\n        map: \"Levels/Space/SB_Endor_01/SB_Endor_01\",\r\n        name: \"Endor\"\r\n    },\r\n    {\r\n        map: \"Levels/Space/SB_Resurgent_01/SB_Resurgent_01\",\r\n        name: \"Unknown Regions\"\r\n    },\r\n    {\r\n        map: \"S1/Levels/Space/SB_SpaceBear_01/SB_SpaceBear_01\",\r\n        name: \"D'Qar\"\r\n    }\r\n]","export const PASSWORDS_ENUM = {\r\n    ALL: { name: \"All\", value: \"all\" },\r\n    FREE: { name: \"Free\", value: \"free\" },\r\n    REQUIRED: { name: \"Required\", value: \"required\" },\r\n}\r\n\r\nexport const PASSWORDS = [\r\n    { name: PASSWORDS_ENUM.ALL.name, value: PASSWORDS_ENUM.ALL.value },\r\n    { name: PASSWORDS_ENUM.FREE.name, value: PASSWORDS_ENUM.FREE.value },\r\n    { name: PASSWORDS_ENUM.REQUIRED.name, value: PASSWORDS_ENUM.REQUIRED.value },\r\n]","import React from \"react\";\r\nimport { MODES } from \"../data/Modes\";\r\nimport { MAPS } from \"../data/Maps\";\r\nimport { PASSWORDS, PASSWORDS_ENUM } from \"../data/Passwords\";\r\n\r\nconst API = 'https://kyber.gg/api';\r\nconst API_SERVERS = `${API}/servers?page=`;\r\nconst API_PROXIES = `${API}/proxies`;\r\nconst API_CONFIG = `${API}/config`;\r\nconst API_CONFIG_PLAY = `${API_CONFIG}/play`;\r\nconst API_CONFIG_HOST = `${API_CONFIG}/host`;\r\nconst IMG_URL_PREFIX = \"https://kyber.gg/static/images/maps/\";\r\nconst IMG_URL_POSTFIX = \".jpg\";\r\n\r\nconst MODS_ALL = 50;\r\nconst PLAYERS_MAX = 64;\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pageCount: 0,\r\n            serverCount: 0,\r\n\r\n            mods: MODS_ALL,\r\n            users: PLAYERS_MAX,\r\n            maxPlayers: PLAYERS_MAX,\r\n            passwordStatus: PASSWORDS_ENUM.ALL.value,\r\n\r\n            passwords: PASSWORDS,\r\n            modes: MODES,\r\n            maps: MAPS,\r\n\r\n            servers: [],\r\n            proxies: []\r\n        };\r\n\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n        this.onModsChange = this.onModsChange.bind(this);\r\n        this.onUsersChange = this.onUsersChange.bind(this);\r\n        this.onMaxPlayersChange = this.onMaxPlayersChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchProxies();\r\n        this.fetchServers();\r\n    }\r\n\r\n    // PROXIES\r\n    fetchProxies = async () => {\r\n        await fetch(`${API_PROXIES}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({ proxies: data })\r\n            })\r\n\r\n        console.log(this.state.proxies);\r\n    }\r\n\r\n    // SERVERS\r\n    fetchServers = async () => {\r\n        this.setState({\r\n            servers: []\r\n        });\r\n        await fetch(`${API_SERVERS}1`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    pageCount: data.pageCount,\r\n                    serverCount: data.serverCount,\r\n                    servers: this.state.servers.concat(data.servers)\r\n                })\r\n            });\r\n\r\n        if (this.state.pageCount > 1) {\r\n            for (var i = 2; i <= this.state.pageCount; i++) {\r\n                await fetch(`${API_SERVERS}${i}`)\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        this.setState({\r\n                            servers: this.state.servers.concat(data.servers)\r\n                        })\r\n                    });\r\n            }\r\n        }\r\n\r\n        console.log(`Found ${this.state.serverCount} Kyber servers: `);\r\n        console.log(this.state.servers);\r\n    }\r\n\r\n    // WITH PASSWORD\r\n    onPasswordChange(e) {\r\n        this.setState({ passwordStatus: e.target.value });\r\n    }\r\n\r\n    // ACTIVE PLAYERS\r\n    onUsersChange(e) {\r\n        this.setState({ users: +e.target.value })\r\n    }\r\n\r\n    // SERVER CAPACITY\r\n    onMaxPlayersChange(e) {\r\n        let capacity = +e.target.value;\r\n\r\n        this.setState({ maxPlayers: +e.target.value })\r\n        if (this.state.users > capacity) {\r\n            this.setState({ users: capacity })\r\n        }\r\n    }\r\n\r\n    // MODS ENABLED\r\n    onModsChange(e) {\r\n        this.setState({ mods: +e.target.value })\r\n    }\r\n\r\n    // APPLY FILTERS\r\n    applyFilters() {\r\n        if (this.state.mods !== MODS_ALL) {\r\n            let serverModsFilter = this.state.servers.filter(s => s.mods.length <= this.state.mods);\r\n            this.setState({ servers: serverModsFilter });\r\n        }\r\n\r\n        if (this.state.maxPlayers !== PLAYERS_MAX) {\r\n            let serverMaxPlayersFilter = this.state.servers.filter(s => s.maxPlayers <= this.state.maxPlayers);\r\n            this.setState({ servers: serverMaxPlayersFilter });\r\n        }\r\n\r\n        if (this.state.users !== PLAYERS_MAX) {\r\n            let serverPlayersFilter = this.state.servers.filter(s => s.users <= this.state.users);\r\n            this.setState({ servers: serverPlayersFilter });\r\n        }\r\n\r\n        if (this.state.passwordStatus !== PASSWORDS_ENUM.ALL.value) {\r\n            let requiresPassword = this.state.passwordStatus === PASSWORDS_ENUM.REQUIRED.value;\r\n            var serverPasswordFilter = this.state.servers.filter(s => s.requiresPassword === requiresPassword)\r\n            this.setState({ servers: serverPasswordFilter })\r\n        }\r\n    }\r\n\r\n    // FORM SUBMIT\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await this.fetchServers();\r\n\r\n        this.applyFilters();\r\n\r\n        console.log(`Filtered: `);\r\n        console.log(this.state.servers);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"mods-wrapper\">\r\n                        <label htmlFor=\"mods\">Mods (0 - 50): {this.state.mods === MODS_ALL ? \"ALL\" : this.state.mods === 0 ? \"NO MODS\" : this.state.mods}</label><br />\r\n                        <input type=\"range\" id=\"mods\" name=\"mods\" min=\"0\" max={MODS_ALL} onChange={this.onModsChange} value={this.state.mods} />\r\n                    </div>\r\n                    <div className=\"maxPlayers-wrapper\">\r\n                        <label htmlFor=\"players\">Max Server Capacity (2 - 64): {this.state.maxPlayers}</label><br />\r\n                        <input type=\"range\" id=\"maxPlayers\" name=\"maxPlayers\" min=\"2\" max={PLAYERS_MAX} onChange={this.onMaxPlayersChange} value={this.state.maxPlayers} />\r\n                    </div>\r\n                    <div className=\"users-wrapper\">\r\n                        <label htmlFor=\"players\">Active Players (1 - {this.state.maxPlayers}): {this.state.users}</label><br />\r\n                        <input type=\"range\" id=\"users\" name=\"users\" min=\"1\" max={this.state.maxPlayers} onChange={this.onUsersChange} value={this.state.users} />\r\n                    </div>\r\n                    <div className=\"password-wrapper\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <select value={this.state.passwordStatus} id=\"password\" name=\"password\" size=\"2\" onChange={this.onPasswordChange} required>\r\n                            {this.state.passwords.map((p) => (\r\n                                <option key={p.value} value={p.value}>{p.name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <input className=\"submit-button\" type=\"submit\" value=\"Refresh\" />\r\n                </form>\r\n                <ul>\r\n                    {this.state.servers.map(s => {\r\n                        const mapImage = IMG_URL_PREFIX + s.map.replaceAll('/', '-') + IMG_URL_POSTFIX;\r\n                        const mapName = this.state.maps.find(m => m.map === s.map).name;\r\n                        const modeName = this.state.modes.find(m => m.mode === s.mode).name.replaceAll('Versus', 'vs.');\r\n\r\n                        return (\r\n                            <li className=\"server\">\r\n                                <div>\r\n                                    <img className=\"server-map-image\" src={mapImage} alt={modeName + ' on ' + mapName} title={modeName + ' on ' + mapName} />\r\n                                </div>\r\n                                <div>\r\n                                    <div>\r\n                                        <span>{s.requiresPassword && \"🔒 \"}</span>\r\n                                        <span className=\"uppercase\">{s.name}</span>\r\n                                    </div>\r\n                                    <div style={{fontSize: \"calc(6px + 2vmin)\", color: \"#fffc\"}}>\r\n                                        <span className=\"uppercase\">{modeName}</span>\r\n                                        {mapName && (\r\n                                        <>\r\n                                            <span> on </span>\r\n                                            <span className=\"uppercase\">{mapName}</span>\r\n                                        </>\r\n                                        )}\r\n                                        {s.host && (\r\n                                        <>\r\n                                            <span> by </span>\r\n                                            <span className=\"uppercase\">{s.host}</span> \r\n                                        </>\r\n                                        )}\r\n                                        \r\n                                    </div>\r\n                                    <div style={{fontSize: \"calc(6px + 2vmin)\", color: \"#fffc\"}}>\r\n                                        <span className=\"uppercase\">{s.mods.length === 0 ? \"no mods\" : `mods installed: ${s.mods.length}`}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div>\r\n                                        <span className=\"uppercase\">{s.users}/{s.maxPlayers}</span>\r\n                                    </div>\r\n                                    <div >\r\n                                        <progress style={{maxWidth: \"75px\"}} value={s.users} max={s.maxPlayers}></progress>\r\n                                    </div>                                    \r\n                                </div>\r\n                                <div>\r\n                                    <div>\r\n                                        <span className=\"uppercase\">\r\n                                            <img src={s.proxy.flag} alt=\"location flag\" className=\"server-flag-image\" /> {s.proxy.name}\r\n                                        </span>\r\n                                    </div>                                    \r\n                                    <div>\r\n                                        <span className=\"uppercase\">Started {s.startedAtPretty}</span>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n\r\n                            </li>\r\n                        )\r\n                    }\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\n\r\nimport Form from \"./components/Form\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src=\"https://kyber.gg/logo.svg\" className=\"App-logo\" alt=\"logo\" />\r\n        <Form />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}